{"version":3,"sources":["webaudio-player/cache.js","webaudio-player/core-player.js","webaudio-player/player.js","webaudio-player/request.js","webaudio-player/settings.js"],"sourcesContent":["define('webaudio-player/cache', ['exports'], function (exports) {\n\n  'use strict';\n\n  var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  // k = key, v = value, e = (cache) entry\n\n  var Cache = (function () {\n    function Cache() {\n      var size = arguments[0] === undefined ? 5 : arguments[0];\n\n      _classCallCheck(this, Cache);\n\n      this.cache = [];\n      this.size = size;\n    }\n\n    _createClass(Cache, [{\n      key: \"get\",\n      value: function get(k) {\n        var v = undefined;\n\n        this.cache.forEach(function (e) {\n          if (e.k === k) {\n            v = e.v;\n          }\n        });\n\n        return v;\n      }\n    }, {\n      key: \"set\",\n      value: function set(k, v) {\n        if (this.get(k)) {\n          return;\n        }\n\n        this.cache.push({\n          k: k,\n          v: v\n        });\n\n        if (this.cache.length > this.size) {\n          this.cache.shift();\n        }\n      }\n    }]);\n\n    return Cache;\n  })();\n\n  exports['default'] = Cache;\n\n});","define('webaudio-player/core-player', ['exports', 'webaudio-player/settings', 'webaudio-player/request', 'webaudio-player/cache'], function (exports, settings, request, Cache) {\n\n  'use strict';\n\n  var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n  var CorePlayer = (function () {\n    function CorePlayer() {\n      _classCallCheck(this, CorePlayer);\n\n      this.cache = new Cache['default']();\n      this.audioContext = new AudioContext();\n      this.gainNode = this.audioContext.createGain();\n      this.gainNode.gain.value = 1;\n      this.gainNode.connect(this.audioContext.destination);\n      this.__onended_callbacks = [];\n\n      this.track = {};\n    }\n\n    _createClass(CorePlayer, [{\n      key: 'on',\n      value: function on(name, fn) {\n        if (name === 'ended') {\n          this.__onended_callbacks.push(fn);\n        }\n      }\n    }, {\n      key: '_decode',\n      value: function _decode(arrayBuffer) {\n        var deferred = settings.libs.RSVP.defer();\n\n        this.audioContext.decodeAudioData(arrayBuffer, deferred.resolve, deferred.reject);\n\n        return deferred.promise;\n      }\n    }, {\n      key: '_play',\n      value: function _play() {\n        var audioBuffer = arguments[0] === undefined ? null : arguments[0];\n\n        var _this = this;\n\n        var when = arguments[1] === undefined ? 0 : arguments[1];\n        var offset = arguments[2] === undefined ? 0 : arguments[2];\n\n        this._stop(when);\n\n        audioBuffer = audioBuffer || this.bufferSource.buffer;\n\n        this.bufferSource = this.audioContext.createBufferSource();\n        this.bufferSource.buffer = audioBuffer;\n        this.track.duration = this.bufferSource.buffer.duration;\n        this.track.startedAt = this.audioContext.currentTime - offset;\n        this.bufferSource.connect(this.gainNode);\n        this.bufferSource.start(when, offset);\n        this.bufferSource.onended = function () {\n          _this.__onended_callbacks.forEach(function (cb) {\n            cb();\n          });\n        };\n      }\n    }, {\n      key: '_stop',\n      value: function _stop() {\n        var when = arguments[0] === undefined ? 0 : arguments[0];\n\n        if (this.bufferSource) {\n          this.bufferSource.stop(when);\n        }\n      }\n    }, {\n      key: 'getSeconds',\n      value: function getSeconds() {\n        if (!this.track.startedAt) {\n          return 0;\n        }\n\n        return Math.floor(this.audioContext.currentTime - this.track.startedAt);\n      }\n    }, {\n      key: 'getDuration',\n      value: function getDuration() {\n        if (!this.track.duration) {\n          return 0;\n        }\n\n        return Math.floor(this.track.duration);\n      }\n    }, {\n      key: 'play',\n      value: function play(url) {\n        var _this2 = this;\n\n        var when = arguments[1] === undefined ? 0 : arguments[1];\n        var offset = arguments[2] === undefined ? 0 : arguments[2];\n\n        var audioBuffer = this.cache.get(url);\n\n        if (audioBuffer) {\n          this._play(audioBuffer, when, offset);\n          return;\n        }\n\n        request.fetch(url).then(this._decode.bind(this)).then(function (audioBuffer) {\n          _this2._play(audioBuffer, when, offset);\n        });\n      }\n    }, {\n      key: 'preload',\n      value: function preload(url) {\n        var _this3 = this;\n\n        request.fetch(url).then(this._decode.bind(this)).then(function (audioBuffer) {\n          _this3.cache.set(url, audioBuffer);\n        });\n      }\n    }, {\n      key: 'pause',\n      value: function pause() {\n        return this.audioContext.suspend();\n      }\n    }, {\n      key: 'resume',\n      value: function resume() {\n        return this.audioContext.resume();\n      }\n    }, {\n      key: 'setVolume',\n      value: function setVolume(volume) {\n        this.gainNode.gain.value = volume;\n      }\n    }, {\n      key: 'getVolume',\n      value: function getVolume() {\n        return this.gainNode.gain.value;\n      }\n    }, {\n      key: 'seekToPercent',\n      value: function seekToPercent(percent) {\n        var seconds = percent * this.getDuration();\n        this._play(null, 0, seconds);\n      }\n    }]);\n\n    return CorePlayer;\n  })();\n\n  exports['default'] = CorePlayer;\n\n  // duration\n  // startedAt\n\n});","define('webaudio-player/player', ['exports', 'webaudio-player/core-player'], function (exports, CorePlayer) {\n\n  'use strict';\n\n  var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n  var Player = (function () {\n    function Player() {\n      _classCallCheck(this, Player);\n\n      this._player = new CorePlayer['default']();\n    }\n\n    _createClass(Player, [{\n      key: 'play',\n      value: function play(url) {\n        var when = arguments[1] === undefined ? 0 : arguments[1];\n        var offset = arguments[2] === undefined ? 0 : arguments[2];\n\n        this._player.play(url, when, offset);\n      }\n    }, {\n      key: 'pause',\n      value: function pause() {\n        this._player.pause();\n      }\n    }, {\n      key: 'resume',\n      value: function resume() {\n        this._player.resume();\n      }\n    }, {\n      key: 'setVolume',\n      value: function setVolume(volume) {\n        this._player.setVolume(volume);\n      }\n    }, {\n      key: 'mute',\n      value: function mute() {\n        this.oldVolume = this._player.getVolume();\n        this.setVolume(0);\n      }\n    }, {\n      key: 'unmute',\n      value: function unmute() {\n        this.setVolume(this.oldVolume || 1);\n        this.oldVolume = null;\n      }\n    }, {\n      key: 'preload',\n      value: function preload(url) {\n        this._player.preload(url);\n      }\n    }, {\n      key: 'getSeconds',\n      value: function getSeconds() {\n        return this._player.getSeconds();\n      }\n    }, {\n      key: 'getDuration',\n      value: function getDuration() {\n        return this._player.getDuration();\n      }\n    }, {\n      key: 'seekToPercent',\n      value: function seekToPercent(percent) {\n        return this._player.seekToPercent(percent);\n      }\n    }, {\n      key: 'on',\n      value: function on(name, fn) {\n        return this._player.on(name, fn);\n      }\n    }]);\n\n    return Player;\n  })();\n\n  exports['default'] = Player;\n\n});","define('webaudio-player/request', ['exports', 'webaudio-player/settings'], function (exports, settings) {\n\n  'use strict';\n\n  var fetch = function fetch(url) {\n    var request = new XMLHttpRequest(),\n        deferred = settings.libs.RSVP.defer();\n\n    request.open('GET', url, true);\n    request.responseType = 'arraybuffer';\n\n    request.onload = function () {\n      deferred.resolve(request.response);\n    };\n\n    request.onerror = function () {\n      var error = new Error('Could not fetch url ' + url);\n      deferred.reject(error);\n    };\n\n    request.send();\n    return deferred.promise;\n  };\n\n  exports.fetch = fetch;\n\n});","define('webaudio-player/settings', ['exports'], function (exports) {\n\n  'use strict';\n\n  var libs = {};\n\n  var configure = function configure(options) {\n    libs.RSVP = options.RSVP;\n  };\n\n  exports.configure = configure;\n  exports.libs = libs;\n\n});"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"webaudio-player.js"}