{"version":3,"sources":["webaudio-player/audio-player.js","webaudio-player/cache.js","webaudio-player/events.js","webaudio-player/player.js","webaudio-player/request.js","webaudio-player/settings.js","webaudio-player/xhr-player.js"],"sourcesContent":["define('webaudio-player/audio-player', ['exports', 'webaudio-player/events', 'webaudio-player/settings'], function (exports, events, settings) {\n\n  'use strict';\n\n  var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n  var AudioPlayer = (function () {\n    function AudioPlayer(context, destination) {\n      _classCallCheck(this, AudioPlayer);\n\n      this.context = context;\n      this.destination = destination;\n      this.audio = new Audio();\n      this.audio.addEventListener('ended', function () {\n        events.trigger('ended');\n      });\n    }\n\n    _createClass(AudioPlayer, [{\n      key: '_fetch',\n      value: function _fetch(url) {\n        var _this = this;\n\n        var deferred = settings.libs.RSVP.defer();\n        this.audio.src = url;\n        this.url = url;\n        this.audio.load();\n\n        this.audio.addEventListener('canplaythrough', function () {\n          deferred.resolve(_this.audio);\n        });\n\n        return deferred.promise;\n      }\n    }, {\n      key: 'play',\n      value: function play(url) {\n        var _this2 = this;\n\n        if (this.url === url) {\n          this.seekToPercent(0);\n          this.audio.play();\n          return;\n        }\n\n        this._fetch(url).then(function (audio) {\n          if (!_this2.source) {\n            _this2.source = _this2.context.createMediaElementSource(audio);\n            _this2.source.connect(_this2.destination);\n          }\n\n          audio.play();\n        });\n      }\n    }, {\n      key: 'stop',\n      value: function stop() {\n        this.audio.pause();\n      }\n    }, {\n      key: 'getSeconds',\n      value: function getSeconds() {\n        return this.audio.currentTime || 0;\n      }\n    }, {\n      key: 'getDuration',\n      value: function getDuration() {\n        return this.audio.duration || 0;\n      }\n    }, {\n      key: 'seekToPercent',\n      value: function seekToPercent(percent) {\n        this.audio.currentTime = percent * this.getDuration();\n      }\n    }]);\n\n    return AudioPlayer;\n  })();\n\n  exports['default'] = AudioPlayer;\n\n});","define('webaudio-player/cache', ['exports'], function (exports) {\n\n  'use strict';\n\n  var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  // k = key, v = value, e = (cache) entry\n\n  var Cache = (function () {\n    function Cache() {\n      var size = arguments[0] === undefined ? 5 : arguments[0];\n\n      _classCallCheck(this, Cache);\n\n      this.cache = [];\n      this.size = size;\n    }\n\n    _createClass(Cache, [{\n      key: \"get\",\n      value: function get(k) {\n        var v = undefined;\n\n        this.cache.forEach(function (e) {\n          if (e.k === k) {\n            v = e.v;\n          }\n        });\n\n        return v;\n      }\n    }, {\n      key: \"set\",\n      value: function set(k, v) {\n        if (this.get(k)) {\n          return;\n        }\n\n        this.cache.push({\n          k: k,\n          v: v\n        });\n\n        if (this.cache.length > this.size) {\n          this.cache.shift();\n        }\n      }\n    }]);\n\n    return Cache;\n  })();\n\n  exports['default'] = Cache;\n\n});","define('webaudio-player/events', ['exports'], function (exports) {\n\n  'use strict';\n\n  var handlers = {};\n\n  var on = function on(name, fn) {\n    handlers[name] = handlers[name] || [];\n    handlers[name].push(fn);\n  };\n\n  var trigger = function trigger(name) {\n    handlers[name] = handlers[name] || [];\n    handlers[name].forEach(function (fn) {\n      fn();\n    });\n  };\n\n  exports.on = on;\n  exports.trigger = trigger;\n\n});","define('webaudio-player/player', ['exports', 'webaudio-player/audio-player', 'webaudio-player/xhr-player', 'webaudio-player/events'], function (exports, AudioPlayer, XhrPlayer, events) {\n\n  'use strict';\n\n  var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n  var Player = (function () {\n    function Player() {\n      _classCallCheck(this, Player);\n\n      this.context = new AudioContext();\n\n      this.destination = this.context.createGain();\n      this.destination.gain.value = 1;\n      this.destination.connect(this.context.destination);\n\n      this.players = {\n        audio: new AudioPlayer['default'](this.context, this.destination),\n        xhr: new XhrPlayer['default'](this.context, this.destination)\n      };\n\n      this.player = this.players.audio;\n    }\n\n    _createClass(Player, [{\n      key: 'play',\n      value: function play(url) {\n        this.player.stop();\n\n        if (this.players.xhr.isCached(url)) {\n          this.player = this.players.xhr;\n        } else {\n          this.player = this.players.audio;\n        }\n\n        this.player.play(url);\n      }\n    }, {\n      key: 'pause',\n      value: function pause() {\n        if (this.isPaused()) {\n          return;\n        }\n        this._isPaused = true;\n        this.context.suspend();\n      }\n    }, {\n      key: 'unpause',\n      value: function unpause() {\n        if (!this.isPaused()) {\n          return;\n        }\n        this._isPaused = false;\n        this.context.resume();\n      }\n    }, {\n      key: 'isPaused',\n      value: function isPaused() {\n        return this._isPaused;\n      }\n    }, {\n      key: 'setVolume',\n      value: function setVolume(volume) {\n        this.destination.gain.value = volume;\n      }\n    }, {\n      key: 'getVolume',\n      value: function getVolume(volume) {\n        return this.destination.gain.value;\n      }\n    }, {\n      key: 'mute',\n      value: function mute() {\n        this.oldVolume = this._player.getVolume();\n        this.setVolume(0);\n      }\n    }, {\n      key: 'unmute',\n      value: function unmute() {\n        this.setVolume(this.oldVolume || 1);\n        this.oldVolume = null;\n      }\n    }, {\n      key: 'preload',\n      value: function preload(url) {\n        this.players.xhr.preload(url);\n      }\n    }, {\n      key: 'getSeconds',\n      value: function getSeconds() {\n        return this.player.getSeconds();\n      }\n    }, {\n      key: 'getDuration',\n      value: function getDuration() {\n        return this.player.getDuration();\n      }\n    }, {\n      key: 'seekToPercent',\n      value: function seekToPercent(percent) {\n        return this.player.seekToPercent(percent);\n      }\n    }, {\n      key: 'on',\n      value: function on(name, fn) {\n        events.on(name, fn);\n      }\n    }]);\n\n    return Player;\n  })();\n\n  exports['default'] = Player;\n\n});","define('webaudio-player/request', ['exports', 'webaudio-player/settings'], function (exports, settings) {\n\n  'use strict';\n\n  var fetch = function fetch(url) {\n    var request = new XMLHttpRequest(),\n        deferred = settings.libs.RSVP.defer();\n\n    request.open('GET', url, true);\n    request.responseType = 'arraybuffer';\n\n    request.onload = function () {\n      deferred.resolve(request.response);\n    };\n\n    request.onerror = function () {\n      var error = new Error('Could not fetch url ' + url);\n      deferred.reject(error);\n    };\n\n    request.send();\n    return deferred.promise;\n  };\n\n  exports.fetch = fetch;\n\n});","define('webaudio-player/settings', ['exports'], function (exports) {\n\n  'use strict';\n\n  var libs = {};\n\n  var configure = function configure(options) {\n    libs.RSVP = options.RSVP;\n  };\n\n  exports.configure = configure;\n  exports.libs = libs;\n\n});","define('webaudio-player/xhr-player', ['exports', 'webaudio-player/settings', 'webaudio-player/request', 'webaudio-player/cache', 'webaudio-player/events'], function (exports, settings, request, Cache, events) {\n\n  'use strict';\n\n  var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n  var XhrPlayer = (function () {\n    function XhrPlayer(context, destination) {\n      _classCallCheck(this, XhrPlayer);\n\n      this.context = context;\n      this.destination = destination;\n      this._cache = new Cache['default']();\n      this.startedAt = 0;\n    }\n\n    _createClass(XhrPlayer, [{\n      key: '_play',\n      value: function _play() {\n        var buffer = arguments[0] === undefined ? null : arguments[0];\n        var offset = arguments[1] === undefined ? 0 : arguments[1];\n\n        if (!buffer) {\n          buffer = this.source.buffer;\n        }\n\n        if (this.source) {\n          this.source.disconnect();\n        }\n\n        this.buffer = buffer;\n        this.source = this.context.createBufferSource();\n        this.source.buffer = this.buffer;\n        this.source.connect(this.destination);\n        this.source.start(0, offset);\n        this.startedAt = this.context.currentTime - offset;\n        this.source.onended = function () {\n          events.trigger('ended');\n        };\n      }\n    }, {\n      key: 'stop',\n      value: function stop() {\n        if (this.source) {\n          this.source.disconnect();\n        }\n      }\n    }, {\n      key: 'play',\n      value: function play(url) {\n        if (this.url === url) {\n          this.seekToPercent(0);\n          return;\n        }\n\n        var buffer = this._cache.get(url);\n\n        if (!buffer) {\n          throw new Error('Oops, you need to have preloaded the track.');\n        }\n\n        this.url = url;\n        this._play(buffer);\n      }\n    }, {\n      key: 'getSeconds',\n      value: function getSeconds() {\n        var duration = this.getDuration();\n        var since = Math.floor(this.context.currentTime - this.startedAt);\n        return Math.min(since, duration);\n      }\n    }, {\n      key: 'getDuration',\n      value: function getDuration() {\n        if (!this.buffer) {\n          return 0;\n        }\n\n        return Math.floor(this.buffer.duration);\n      }\n    }, {\n      key: 'seekToPercent',\n      value: function seekToPercent(percent) {\n        var seconds = percent * this.getDuration();\n        this._play(null, seconds);\n      }\n    }, {\n      key: 'isPaused',\n      value: function isPaused() {\n        return this._isPaused;\n      }\n    }, {\n      key: '_decode',\n      value: function _decode(buffer) {\n        var deferred = settings.libs.RSVP.defer();\n\n        this.context.decodeAudioData(buffer, deferred.resolve, deferred.reject);\n\n        return deferred.promise;\n      }\n    }, {\n      key: 'preload',\n      value: function preload(url) {\n        var _this = this;\n\n        request.fetch(url).then(this._decode.bind(this)).then(function (buffer) {\n          _this._cache.set(url, buffer);\n        });\n      }\n    }, {\n      key: 'isCached',\n      value: function isCached(url) {\n        return !!this._cache.get(url);\n      }\n    }]);\n\n    return XhrPlayer;\n  })();\n\n  exports['default'] = XhrPlayer;\n\n});"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzfile":"webaudio-player.js"}